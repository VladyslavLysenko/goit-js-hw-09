{"mappings":"kjBAGA,SAASA,EAAcC,EAAUC,GAkB/B,OAfgB,IAAIC,SAAQ,SAACC,EAASC,GAEpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WAELH,EACFF,EAAS,CAACH,WAAUC,UAEpBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAQMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBAYF,IAVA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEfC,EAAa,CACjBC,WAAYJ,EAAMK,MAClBJ,KAAMA,EAAKI,MACXH,OAAQA,EAAOG,OAKRC,EAAI,EAAGA,EAAIH,EAAWD,OAAQI,IAAK,CAE1C,IAAIC,OAAA,EACAC,EAAWL,EAAWC,WAAaE,EAAIN,EAEzClB,EAAcyB,EAAUJ,EAAWF,MAChCQ,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACnB2B,EAAAC,GAASC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAErEgC,OAAM,SAAAN,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACpB2B,EAAAC,GAASC,OAAOI,QAAQ,sBAAuCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGnEuB,GAAYJ,EAAWD,QACzBgB,cAAcV,E","sources":["src/js/03-promises.js"],"sourcesContent":["import \"flatpickr/dist/flatpickr.min.css\";\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n\n\n  const promise = new Promise((resolve, reject) => {\n  \n    const shouldResolve = Math.random() > 0.3;\n  \n    setTimeout(() => {\n      \n      if (shouldResolve) {\n        resolve( {position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n    \n  });\n\n  return promise;\n}\n\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n    \n  const { delay, step, amount } = e.currentTarget.elements;\n    \n  const timeObject = {\n    firstDelay: delay.value,\n    step: step.value,\n    amount: amount.value,\n  }\n\n\n\n  for (let i = 0; i < timeObject.amount; i++) {\n\n    let position += 1;\n    let interval = timeObject.firstDelay + i * delay;\n     \n      createPromise(position, timeObject.step)\n        .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n        .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n        \n      if (position >= timeObject.amount) {\n        clearInterval(interval);\n      }\n\n    }\n\n\n\n    // const interval = setInterval(() => { \n    //   position += 1;\n    //   createPromise(position, timeObject.step)\n    //     .then(({ position, delay }) => {\n    //     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    //   })\n    //     .catch(({ position, delay }) => {\n    //     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    //     });\n        \n    //   if (position >= timeObject.amount) {\n    //     clearInterval(interval);\n    //   }\n    // }, timeObject.step)\n\n \n\n}\n)\n    \n\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","timeObject","firstDelay","value","i","position1","interval","then","param","$parcel$interopDefault","$iU1Pc","Notify","success","concat","catch","failure","clearInterval"],"version":3,"file":"03-promises.6aca6629.js.map"}